/** Declaration file generated by dts-gen */

export = node_mpv;

declare class node_mpv {
    constructor(options?: any, mpv_args?: any);

    addAudioTrack(file: any, flag: any, title: any, lang: any): void;

    addListener(type: any, listener: any): any;

    addProperty(property: any, value: any): void;

    addSubtitles(file: any, flag: any, title: any, lang: any): void;

    adjustAudioTiming(seconds: any): void;

    adjustSubtitleTiming(seconds: any): void;

    adjustVolume(value: any): void;

    append(file: any, mode: any, options: any): void;

    brightness(value: any): void;

    clearPlaylist(): void;

    command(command: any, args: any): void;

    commandJSON(command: any): void;

    contrast(value: any): void;

    cycleAudioTracks(): void;

    cycleProperty(property: any): void;

    cycleSubtitles(): void;

    displayASS(ass: any, duration: any, position: any): void;

    emit(type: any, args: any): any;

    eventNames(): any;

    freeCommand(command: any): void;

    fullscreen(): void;

    gamma(value: any): void;

    getMaxListeners(): any;

    getProperty(property: any, id: any): any;

    goToPosition(seconds: any): void;

    hideSubtitles(): void;

    hue(value: any): void;

    leaveFullscreen(): void;

    listenerCount(type: any): any;

    listeners(type: any): any;

    load(file: any, mode?: any, options?: any): void;

    loadFile(file: any, mode: any): void;

    loadPlaylist(playlist: any, mode: any): void;

    loadStream(url: any, mode: any): void;

    loop(times: any): void;

    multiplyProperty(property: any, value: any): void;

    mute(): void;

    next(mode: any): void;

    observeProperty(property: any, id: any): void;

    off(type: any, listener: any): any;

    on(type: any, listener: any): any;

    once(type: any, listener: any): any;

    pause(): void;

    play(): void;

    playlistMove(index1: any, index2: any): void;

    playlistRemove(index: any): void;

    prependListener(type: any, listener: any): any;

    prependOnceListener(type: any, listener: any): any;

    prev(mode: any): void;

    quit(): void;

    rawListeners(type: any): any;

    removeAllListeners(type: any, ...args: any[]): any;

    removeAudioTrack(id: any): void;

    removeListener(type: any, listener: any): any;

    removeSubtitles(id: any): void;

    resume(): void;

    rotateVideo(degrees: any): void;

    saturation(value: any): void;

    screenshot(file: any, option: any): void;

    seek(seconds: any): void;

    selectAudioTrack(id: any): void;

    selectSubtitle(id: any): void;

    selectSubtitles(id: any): void;

    setMaxListeners(n: any): any;

    setMultipleProperties(properties: any): void;

    setProperty(property: any, value: any): void;

    showSubtitles(): void;

    shuffle(): void;

    speed(factor: any): void;

    stop(): void;

    subtitleScale(scale: any): void;

    subtitleSeek(lines: any): void;

    toggleFullscreen(): void;

    toggleMute(): void;

    togglePause(): void;

    toggleSubtitleVisibility(): void;

    unmute(): void;

    unobserveProperty(id: any): void;

    volume(value: any): void;

    zoomVideo(factor: any): void;

}

declare namespace node_mpv {
    namespace prototype {
        function addAudioTrack(file: any, flag: any, title: any, lang: any): void;

        function addListener(type: any, listener: any): any;

        function addProperty(property: any, value: any): void;

        function addSubtitles(file: any, flag: any, title: any, lang: any): void;

        function adjustAudioTiming(seconds: any): void;

        function adjustSubtitleTiming(seconds: any): void;

        function adjustVolume(value: any): void;

        function append(file: any, mode: any, options: any): void;

        function brightness(value: any): void;

        function clearPlaylist(): void;

        function command(command: any, args: any): void;

        function commandJSON(command: any): void;

        function contrast(value: any): void;

        function cycleAudioTracks(): void;

        function cycleProperty(property: any): void;

        function cycleSubtitles(): void;

        function displayASS(ass: any, duration: any, position: any): void;

        function emit(type: any, args: any): any;

        function eventNames(): any;

        function freeCommand(command: any): void;

        function fullscreen(): void;

        function gamma(value: any): void;

        function getMaxListeners(): any;

        function getProperty(property: any, id: any): any;

        function goToPosition(seconds: any): void;

        function hideSubtitles(): void;

        function hue(value: any): void;

        function leaveFullscreen(): void;

        function listenerCount(type: any): any;

        function listeners(type: any): any;

        function load(file: any, mode: any, options: any): void;

        function loadFile(file: any, mode: any): void;

        function loadPlaylist(playlist: any, mode: any): void;

        function loadStream(url: any, mode: any): void;

        function loop(times: any): void;

        function multiplyProperty(property: any, value: any): void;

        function mute(): void;

        function next(mode: any): void;

        function observeProperty(property: any, id: any): void;

        function off(type: any, listener: any): any;

        function on(type: any, listener: any): any;

        function once(type: any, listener: any): any;

        function pause(): void;

        function play(): void;

        function playlistMove(index1: any, index2: any): void;

        function playlistRemove(index: any): void;

        function prependListener(type: any, listener: any): any;

        function prependOnceListener(type: any, listener: any): any;

        function prev(mode: any): void;

        function quit(): void;

        function rawListeners(type: any): any;

        function removeAllListeners(type: any, ...args: any[]): any;

        function removeAudioTrack(id: any): void;

        function removeListener(type: any, listener: any): any;

        function removeSubtitles(id: any): void;

        function resume(): void;

        function rotateVideo(degrees: any): void;

        function saturation(value: any): void;

        function screenshot(file: any, option: any): void;

        function seek(seconds: any): void;

        function selectAudioTrack(id: any): void;

        function selectSubtitle(id: any): void;

        function selectSubtitles(id: any): void;

        function setMaxListeners(n: any): any;

        function setMultipleProperties(properties: any): void;

        function setProperty(property: any, value: any): void;

        function showSubtitles(): void;

        function shuffle(): void;

        function speed(factor: any): void;

        function stop(): void;

        function subtitleScale(scale: any): void;

        function subtitleSeek(lines: any): void;

        function toggleFullscreen(): void;

        function toggleMute(): void;

        function togglePause(): void;

        function toggleSubtitleVisibility(): void;

        function unmute(): void;

        function unobserveProperty(id: any): void;

        function volume(value: any): void;

        function zoomVideo(factor: any): void;

        namespace addAudioTrack {
            const prototype: {
            };

        }

        namespace addListener {
            const prototype: {
            };

        }

        namespace addProperty {
            const prototype: {
            };

        }

        namespace addSubtitles {
            const prototype: {
            };

        }

        namespace adjustAudioTiming {
            const prototype: {
            };

        }

        namespace adjustSubtitleTiming {
            const prototype: {
            };

        }

        namespace adjustVolume {
            const prototype: {
            };

        }

        namespace append {
            const prototype: {
            };

        }

        namespace brightness {
            const prototype: {
            };

        }

        namespace clearPlaylist {
            const prototype: {
            };

        }

        namespace command {
            const prototype: {
            };

        }

        namespace commandJSON {
            const prototype: {
            };

        }

        namespace contrast {
            const prototype: {
            };

        }

        namespace cycleAudioTracks {
            const prototype: {
            };

        }

        namespace cycleProperty {
            const prototype: {
            };

        }

        namespace cycleSubtitles {
            const prototype: {
            };

        }

        namespace displayASS {
            const prototype: {
            };

        }

        namespace emit {
            const prototype: {
            };

        }

        namespace eventNames {
            const prototype: {
            };

        }

        namespace freeCommand {
            const prototype: {
            };

        }

        namespace fullscreen {
            const prototype: {
            };

        }

        namespace gamma {
            const prototype: {
            };

        }

        namespace getMaxListeners {
            const prototype: {
            };

        }

        namespace getProperty {
            const prototype: {
            };

        }

        namespace goToPosition {
            const prototype: {
            };

        }

        namespace hideSubtitles {
            const prototype: {
            };

        }

        namespace hue {
            const prototype: {
            };

        }

        namespace leaveFullscreen {
            const prototype: {
            };

        }

        namespace listenerCount {
            const prototype: {
            };

        }

        namespace listeners {
            const prototype: {
            };

        }

        namespace load {
            const prototype: {
            };

        }

        namespace loadFile {
            const prototype: {
            };

        }

        namespace loadPlaylist {
            const prototype: {
            };

        }

        namespace loadStream {
            const prototype: {
            };

        }

        namespace loop {
            const prototype: {
            };

        }

        namespace multiplyProperty {
            const prototype: {
            };

        }

        namespace mute {
            const prototype: {
            };

        }

        namespace next {
            const prototype: {
            };

        }

        namespace observeProperty {
            const prototype: {
            };

        }

        namespace off {
            const prototype: {
            };

        }

        namespace on {
            const prototype: {
            };

        }

        namespace once {
            const prototype: {
            };

        }

        namespace pause {
            const prototype: {
            };

        }

        namespace play {
            const prototype: {
            };

        }

        namespace playlistMove {
            const prototype: {
            };

        }

        namespace playlistRemove {
            const prototype: {
            };

        }

        namespace prependListener {
            const prototype: {
            };

        }

        namespace prependOnceListener {
            const prototype: {
            };

        }

        namespace prev {
            const prototype: {
            };

        }

        namespace quit {
            const prototype: {
            };

        }

        namespace rawListeners {
            const prototype: {
            };

        }

        namespace removeAllListeners {
            const prototype: {
            };

        }

        namespace removeAudioTrack {
            const prototype: {
            };

        }

        namespace removeListener {
            const prototype: {
            };

        }

        namespace removeSubtitles {
            const prototype: {
            };

        }

        namespace resume {
            const prototype: {
            };

        }

        namespace rotateVideo {
            const prototype: {
            };

        }

        namespace saturation {
            const prototype: {
            };

        }

        namespace screenshot {
            const prototype: {
            };

        }

        namespace seek {
            const prototype: {
            };

        }

        namespace selectAudioTrack {
            const prototype: {
            };

        }

        namespace selectSubtitle {
            const prototype: {
            };

        }

        namespace selectSubtitles {
            const prototype: {
            };

        }

        namespace setMaxListeners {
            const prototype: {
            };

        }

        namespace setMultipleProperties {
            const prototype: {
            };

        }

        namespace setProperty {
            const prototype: {
            };

        }

        namespace showSubtitles {
            const prototype: {
            };

        }

        namespace shuffle {
            const prototype: {
            };

        }

        namespace speed {
            const prototype: {
            };

        }

        namespace stop {
            const prototype: {
            };

        }

        namespace subtitleScale {
            const prototype: {
            };

        }

        namespace subtitleSeek {
            const prototype: {
            };

        }

        namespace toggleFullscreen {
            const prototype: {
            };

        }

        namespace toggleMute {
            const prototype: {
            };

        }

        namespace togglePause {
            const prototype: {
            };

        }

        namespace toggleSubtitleVisibility {
            const prototype: {
            };

        }

        namespace unmute {
            const prototype: {
            };

        }

        namespace unobserveProperty {
            const prototype: {
            };

        }

        namespace volume {
            const prototype: {
            };

        }

        namespace zoomVideo {
            const prototype: {
            };

        }

    }

}

